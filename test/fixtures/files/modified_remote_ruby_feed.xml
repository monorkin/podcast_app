<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href="https://feeds.transistor.fm/stylesheet.xsl" type="text/xsl"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd" xmlns:podcast="https://podcastindex.org/namespace/1.0">
  <channel>
    <atom:link rel="self" type="application/atom+xml" href="https://feeds.transistor.fm/remote-ruby" title="MP3 Audio"/>
    <atom:link rel="hub" href="https://pubsubhubbub.appspot.com/"/>
    <podcast:podping usesPodping="true"/>
    <title>Remote Ruby</title>
    <generator>Transistor (https://transistor.fm)</generator>
    <itunes:new-feed-url>https://feeds.transistor.fm/remote-ruby</itunes:new-feed-url>
    <description>Three Rubyists having conversations and interviewing others about Ruby and web development.</description>
    <copyright>® Remote Ruby</copyright>
    <podcast:guid>756488bb-daeb-5d09-8451-96de9500b93d</podcast:guid>
    <podcast:locked owner="jason@charn.es">no</podcast:locked>
    <podcast:person role="Host" href="https://jasoncharnes.com" img="https://images.transistor.fm/file/transistor/images/person/e8cb34f3-fd01-4f04-acaa-6c78f09940f1/1664565747-image.jpg">Jason Charnes</podcast:person>
    <podcast:person role="Host" href="https://excid3.com" img="https://images.transistor.fm/file/transistor/images/person/59d3d124-d688-4a74-a4b6-520c85b714f3/1664565787-image.jpg">Chris Oliver</podcast:person>
    <podcast:person role="Host" href="https://t.co/iZncAnvuYq" img="https://images.transistor.fm/file/transistor/images/person/475ecc6b-5c2c-4167-8c03-ae9f889d139a/1664565855-image.jpg">Andrew Mason</podcast:person>
    <language>en</language>
    <pubDate>Fri, 29 Sep 2023 07:06:13 -0500</pubDate>
    <lastBuildDate>Sat, 30 Sep 2023 13:49:55 -0500</lastBuildDate>
    <link>https://remoteruby.transistor.fm</link>
    <image>
      <url>https://images.transistor.fm/file/transistor/images/show/112/full_1559164364-artwork.jpg</url>
      <title>Remote Ruby</title>
      <link>https://remoteruby.transistor.fm</link>
    </image>
    <itunes:category text="Education">
      <itunes:category text="How To"/>
    </itunes:category>
    <itunes:category text="Technology"/>
    <itunes:type>episodic</itunes:type>
    <itunes:author>Jason Charnes, Chris Oliver, Andrew Mason</itunes:author>
    <itunes:image href="https://images.transistor.fm/file/transistor/images/show/112/full_1559164364-artwork.jpg"/>
    <itunes:summary>Three Rubyists having conversations and interviewing others about Ruby and web development.</itunes:summary>
    <itunes:subtitle>Three Rubyists having conversations and interviewing others about Ruby and web development..</itunes:subtitle>
    <itunes:keywords>ruby, ruby on rails, coding, software development, programming</itunes:keywords>
    <itunes:owner>
      <itunes:name>Jason Charnes</itunes:name>
    </itunes:owner>
    <itunes:complete>No</itunes:complete>
    <itunes:explicit>No</itunes:explicit>
    <item>
      <title>Layered Rails Design with Vladimir Dementyev</title>
      <itunes:episode>244</itunes:episode>
      <podcast:episode>244</podcast:episode>
      <itunes:title>Layered Rails Design with Vladimir Dementyev</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">e7cfd0f0-9dea-46ee-8aee-3492d7a6ab0d</guid>
      <link>https://share.transistor.fm/s/a589cbfd</link>
      <description>
        <![CDATA[<p>In this episode, Jason and Andrew are joined by guest, Vladimir Dementyev of Ruby on Rails and Evil Martians fame. Today, they touch on Vladmir’s new book on designing Rails applications, and dive into the importance of sticking to Rails principles, even in the era of microservices.  Vladimir shares insights on working as a consultant on legacy Rails projects and the challenges that can arise when codebases deviate from Rails conventions. We’ll also explore the evolution of Rails applications, the power of open source contributions, and Vladimir’s journey to becoming a recognized figure in the tech community. Also, Vladimir introduces AnyCable, a performance-oriented solution for real-time communication in Rails applications and provides insights into its capabilities and evolution. Hit download now to hear much more! </p><p><br></p><p>[00:02:29] Vladimir briefly describes his book on designing Rails applications. </p><p><br></p><p>[00:05:40] Vladimir talks about sticking to Rails principles and not injecting foreign patterns into Rails applications and emphasizes the importance of maintaining a Rails oriented approach even when using microservices. </p><p><br></p><p>[00:08:33] We hear about Vladimir working as a consultant on legacy Rails projects and the challenges of maintaining codebases that deviate from Rails principles. </p><p><br></p><p>[00:10:29] Jason asks for more examples of where the Rails framework ends and developers have to steer their own course. Vladimir discusses the structure of the app folder in Rails applications and mentions the trend of putting everything in the model folder, and he talks about how Rails applications changed during the API-only era, leading to a shift away from Rails conventions and MVC patterns. </p><p><br></p><p>[00:13:41] Andrew expresses how he feels vindicated for sticking to writing Rails apps even when the trend shifted towards API-only development. </p><p><br></p><p>[00:15:08] Vladimir shares his journey to joining Evil Martians, starting as a solo developer, and his attraction to the simplicity of Rails. He mentions his experiments with different design patterns and how joining Evil Martians provided a collaborative environment for open source work. </p><p><br></p><p>[00:19:15] Vladimir talks about how Evil Martians encouraged new engineers to propose conference talks, leading him to present on AnyCable, which sparked his open source contributions. </p><p><br></p><p>[00:20:18]  He talks about how it took a couple of years for his efforts, including writing blog posts and working on AnyCable, to gain recognition and production users outside of Evil Martians. Also, he explains how writing became a way for him to cope with stress and how it contributed to the company’s visibility and recognition in the tech community. </p><p><br></p><p>[00:26:20] We hear about Evil Martians’ shift in focus from consumer products to developer tools and how they use and contribute to products built by others. Vladimir briefly discusses HTTPie, and how they helped with its development. </p><p> </p><p>[00:28:44] Jason brings up AnyCable, and Vladimir tells us what it is, what problem it solves, and the benefits of using it. Also, he explains how AnyCable allows for seamless replacement of Action Cable in existing applications and its Go-based WebSocket server. </p><p><br></p><p>[00:32:16] Vladimir mentions that AnyCable has evolved over seven years to offer additional features, including support for different transports and service-sent events, making it versatile for various use cases. </p><p><br></p><p>[00:34:08] Vladimir discusses the versatility of AnyCable, highlighting that it can be deployed anywhere and used with platforms beyond Rails. He mentions that AnyCable is becoming the default choice for handling WebSockets in Rails applications as they continue to expand their reach into other ecosystems.</p><p><br></p><p>[00:38:09] We hear about some upcoming features for AnyCable, including presence tracking, and plans to make AnyCable compatible with other ecosystems. Vladimir teases a new feature he’s working on for Rails and Turbo.</p><p><br></p><p>[00:43:04] Andrew shares that he used to read Vladimir’s code on GitHub to learn new patterns and gain inspiration for his own work.  He mentions reading code from different libraries and ecosystems is a powerful way to expand one’s toolkit for problem-solving.</p><p><br></p><p>[00:43:47] Vladimir suggests the idea of a podcast or show where experts review codebases and discuss patterns, techniques, and the rationale behind certain code decisions. He believes it could be a great way to learn and share knowledge. </p><p><br></p><p>[00:45:36] Jason shares that he appreciates Vladimir’s contributions to Ruby on Rails and the high-quality content shared by Evil Martian’s on their blog. </p><p><br></p><p>[00:46:36] Find out where you can find Vladimir online.</p><p><br></p><p><br></p><p><strong>Panelists:</strong></p><p>Jason Charnes</p><p>Andrew Mason</p><p><br></p><p><br></p><p><strong>Guest:</strong></p><p>Vladimir Dementyev</p><p><br></p><p><br></p><p><br></p><p><strong>Sponsor:</strong></p><p><a href="https://www.honeybadger.io/">Honeybadger</a></p><p><br></p><p><br></p><p><strong>Links:</strong></p><p><a href="https://twitter.com/jmcharnes?ref_src=twsrc%255Egoogle%257Ctwcamp%255Eserp%257Ctwgr%255Eauthor">Jason Charnes Twitter</a></p><p><a href="https://twitter.com/excid3?lang=en">Chris Oliver Twitter</a></p><p><a href="https://twitter.com/andrewmcodes?lang=en">Andrew Mason Twitter</a></p><p><a href="https://twitter.com/palkan_tula?ref_src=twsrc%255Egoogle%257Ctwcamp%255Eserp%257Ctwgr%255Eauthor">Vladimir Dementyev Twitter</a></p><p><a href="https://github.com/palkan">Vladimir Dementyev GitHub</a></p><p><a href="https://discord.onl/stimulus_reflex/">StimulusReflex Discord</a></p><p><a href="https://evilmartians.com/">Evil Martians</a></p><p><a href="https://www.amazon.com/Layered-Design-Ruby-Rails-Applications/dp/1801813787/ref=tmm_pap_swatch_0?link_from_packtlink=yes"><em>Layered Design for Ruby on Rails Applications: Discover practical design patterns for maintainable web applications</em> by Vladimir Dementyev</a></p><p><a href="https://anycable.io/">AnyCable</a></p><p><a href="https://httpie.io/">HTTPie</a></p><p><a href="https://rubyonrails.org/world">Rails World 2023</a></p><p><a href="https://www.rubyforall.com/">Ruby for All Podcast</a></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p>In this episode, Jason and Andrew are joined by guest, Vladimir Dementyev of Ruby on Rails and Evil Martians fame. Today, they touch on Vladmir’s new book on designing Rails applications, and dive into the importance of sticking to Rails principles, even in the era of microservices.  Vladimir shares insights on working as a consultant on legacy Rails projects and the challenges that can arise when codebases deviate from Rails conventions. We’ll also explore the evolution of Rails applications, the power of open source contributions, and Vladimir’s journey to becoming a recognized figure in the tech community. Also, Vladimir introduces AnyCable, a performance-oriented solution for real-time communication in Rails applications and provides insights into its capabilities and evolution. Hit download now to hear much more! </p><p><br></p><p>[00:02:29] Vladimir briefly describes his book on designing Rails applications. </p><p><br></p><p>[00:05:40] Vladimir talks about sticking to Rails principles and not injecting foreign patterns into Rails applications and emphasizes the importance of maintaining a Rails oriented approach even when using microservices. </p><p><br></p><p>[00:08:33] We hear about Vladimir working as a consultant on legacy Rails projects and the challenges of maintaining codebases that deviate from Rails principles. </p><p><br></p><p>[00:10:29] Jason asks for more examples of where the Rails framework ends and developers have to steer their own course. Vladimir discusses the structure of the app folder in Rails applications and mentions the trend of putting everything in the model folder, and he talks about how Rails applications changed during the API-only era, leading to a shift away from Rails conventions and MVC patterns. </p><p><br></p><p>[00:13:41] Andrew expresses how he feels vindicated for sticking to writing Rails apps even when the trend shifted towards API-only development. </p><p><br></p><p>[00:15:08] Vladimir shares his journey to joining Evil Martians, starting as a solo developer, and his attraction to the simplicity of Rails. He mentions his experiments with different design patterns and how joining Evil Martians provided a collaborative environment for open source work. </p><p><br></p><p>[00:19:15] Vladimir talks about how Evil Martians encouraged new engineers to propose conference talks, leading him to present on AnyCable, which sparked his open source contributions. </p><p><br></p><p>[00:20:18]  He talks about how it took a couple of years for his efforts, including writing blog posts and working on AnyCable, to gain recognition and production users outside of Evil Martians. Also, he explains how writing became a way for him to cope with stress and how it contributed to the company’s visibility and recognition in the tech community. </p><p><br></p><p>[00:26:20] We hear about Evil Martians’ shift in focus from consumer products to developer tools and how they use and contribute to products built by others. Vladimir briefly discusses HTTPie, and how they helped with its development. </p><p> </p><p>[00:28:44] Jason brings up AnyCable, and Vladimir tells us what it is, what problem it solves, and the benefits of using it. Also, he explains how AnyCable allows for seamless replacement of Action Cable in existing applications and its Go-based WebSocket server. </p><p><br></p><p>[00:32:16] Vladimir mentions that AnyCable has evolved over seven years to offer additional features, including support for different transports and service-sent events, making it versatile for various use cases. </p><p><br></p><p>[00:34:08] Vladimir discusses the versatility of AnyCable, highlighting that it can be deployed anywhere and used with platforms beyond Rails. He mentions that AnyCable is becoming the default choice for handling WebSockets in Rails applications as they continue to expand their reach into other ecosystems.</p><p><br></p><p>[00:38:09] We hear about some upcoming features for AnyCable, including presence tracking, and plans to make AnyCable compatible with other ecosystems. Vladimir teases a new feature he’s working on for Rails and Turbo.</p><p><br></p><p>[00:43:04] Andrew shares that he used to read Vladimir’s code on GitHub to learn new patterns and gain inspiration for his own work.  He mentions reading code from different libraries and ecosystems is a powerful way to expand one’s toolkit for problem-solving.</p><p><br></p><p>[00:43:47] Vladimir suggests the idea of a podcast or show where experts review codebases and discuss patterns, techniques, and the rationale behind certain code decisions. He believes it could be a great way to learn and share knowledge. </p><p><br></p><p>[00:45:36] Jason shares that he appreciates Vladimir’s contributions to Ruby on Rails and the high-quality content shared by Evil Martian’s on their blog. </p><p><br></p><p>[00:46:36] Find out where you can find Vladimir online.</p><p><br></p><p><br></p><p><strong>Panelists:</strong></p><p>Jason Charnes</p><p>Andrew Mason</p><p><br></p><p><br></p><p><strong>Guest:</strong></p><p>Vladimir Dementyev</p><p><br></p><p><br></p><p><br></p><p><strong>Sponsor:</strong></p><p><a href="https://www.honeybadger.io/">Honeybadger</a></p><p><br></p><p><br></p><p><strong>Links:</strong></p><p><a href="https://twitter.com/jmcharnes?ref_src=twsrc%255Egoogle%257Ctwcamp%255Eserp%257Ctwgr%255Eauthor">Jason Charnes Twitter</a></p><p><a href="https://twitter.com/excid3?lang=en">Chris Oliver Twitter</a></p><p><a href="https://twitter.com/andrewmcodes?lang=en">Andrew Mason Twitter</a></p><p><a href="https://twitter.com/palkan_tula?ref_src=twsrc%255Egoogle%257Ctwcamp%255Eserp%257Ctwgr%255Eauthor">Vladimir Dementyev Twitter</a></p><p><a href="https://github.com/palkan">Vladimir Dementyev GitHub</a></p><p><a href="https://discord.onl/stimulus_reflex/">StimulusReflex Discord</a></p><p><a href="https://evilmartians.com/">Evil Martians</a></p><p><a href="https://www.amazon.com/Layered-Design-Ruby-Rails-Applications/dp/1801813787/ref=tmm_pap_swatch_0?link_from_packtlink=yes"><em>Layered Design for Ruby on Rails Applications: Discover practical design patterns for maintainable web applications</em> by Vladimir Dementyev</a></p><p><a href="https://anycable.io/">AnyCable</a></p><p><a href="https://httpie.io/">HTTPie</a></p><p><a href="https://rubyonrails.org/world">Rails World 2023</a></p><p><a href="https://www.rubyforall.com/">Ruby for All Podcast</a></p>]]>
      </content:encoded>
      <pubDate>Fri, 29 Sep 2023 07:00:00 -0500</pubDate>
      <author>Jason Charnes, Chris Oliver, Andrew Mason</author>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/media.transistor.fm/a589cbfd/6a2ed588.mp3" length="91573741" type="audio/mpeg"/>
      <itunes:author>Jason Charnes, Chris Oliver, Andrew Mason</itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/112/full_1559164364-artwork.jpg"/>
      <itunes:duration>2861</itunes:duration>
      <itunes:summary>
        <![CDATA[<p>In this episode, Jason and Andrew are joined by guest, Vladimir Dementyev of Ruby on Rails and Evil Martians fame. Today, they touch on Vladmir’s new book on designing Rails applications, and dive into the importance of sticking to Rails principles, even in the era of microservices.  Vladimir shares insights on working as a consultant on legacy Rails projects and the challenges that can arise when codebases deviate from Rails conventions. We’ll also explore the evolution of Rails applications, the power of open source contributions, and Vladimir’s journey to becoming a recognized figure in the tech community. Also, Vladimir introduces AnyCable, a performance-oriented solution for real-time communication in Rails applications and provides insights into its capabilities and evolution. Hit download now to hear much more! </p><p><br></p><p>[00:02:29] Vladimir briefly describes his book on designing Rails applications. </p><p><br></p><p>[00:05:40] Vladimir talks about sticking to Rails principles and not injecting foreign patterns into Rails applications and emphasizes the importance of maintaining a Rails oriented approach even when using microservices. </p><p><br></p><p>[00:08:33] We hear about Vladimir working as a consultant on legacy Rails projects and the challenges of maintaining codebases that deviate from Rails principles. </p><p><br></p><p>[00:10:29] Jason asks for more examples of where the Rails framework ends and developers have to steer their own course. Vladimir discusses the structure of the app folder in Rails applications and mentions the trend of putting everything in the model folder, and he talks about how Rails applications changed during the API-only era, leading to a shift away from Rails conventions and MVC patterns. </p><p><br></p><p>[00:13:41] Andrew expresses how he feels vindicated for sticking to writing Rails apps even when the trend shifted towards API-only development. </p><p><br></p><p>[00:15:08] Vladimir shares his journey to joining Evil Martians, starting as a solo developer, and his attraction to the simplicity of Rails. He mentions his experiments with different design patterns and how joining Evil Martians provided a collaborative environment for open source work. </p><p><br></p><p>[00:19:15] Vladimir talks about how Evil Martians encouraged new engineers to propose conference talks, leading him to present on AnyCable, which sparked his open source contributions. </p><p><br></p><p>[00:20:18]  He talks about how it took a couple of years for his efforts, including writing blog posts and working on AnyCable, to gain recognition and production users outside of Evil Martians. Also, he explains how writing became a way for him to cope with stress and how it contributed to the company’s visibility and recognition in the tech community. </p><p><br></p><p>[00:26:20] We hear about Evil Martians’ shift in focus from consumer products to developer tools and how they use and contribute to products built by others. Vladimir briefly discusses HTTPie, and how they helped with its development. </p><p> </p><p>[00:28:44] Jason brings up AnyCable, and Vladimir tells us what it is, what problem it solves, and the benefits of using it. Also, he explains how AnyCable allows for seamless replacement of Action Cable in existing applications and its Go-based WebSocket server. </p><p><br></p><p>[00:32:16] Vladimir mentions that AnyCable has evolved over seven years to offer additional features, including support for different transports and service-sent events, making it versatile for various use cases. </p><p><br></p><p>[00:34:08] Vladimir discusses the versatility of AnyCable, highlighting that it can be deployed anywhere and used with platforms beyond Rails. He mentions that AnyCable is becoming the default choice for handling WebSockets in Rails applications as they continue to expand their reach into other ecosystems.</p><p><br></p><p>[00:38:09] We hear about some upcoming features for AnyCable, including presence tracking, and plans to make AnyCable compatible with other ecosystems. Vladimir teases a new feature he’s working on for Rails and Turbo.</p><p><br></p><p>[00:43:04] Andrew shares that he used to read Vladimir’s code on GitHub to learn new patterns and gain inspiration for his own work.  He mentions reading code from different libraries and ecosystems is a powerful way to expand one’s toolkit for problem-solving.</p><p><br></p><p>[00:43:47] Vladimir suggests the idea of a podcast or show where experts review codebases and discuss patterns, techniques, and the rationale behind certain code decisions. He believes it could be a great way to learn and share knowledge. </p><p><br></p><p>[00:45:36] Jason shares that he appreciates Vladimir’s contributions to Ruby on Rails and the high-quality content shared by Evil Martian’s on their blog. </p><p><br></p><p>[00:46:36] Find out where you can find Vladimir online.</p><p><br></p><p><br></p><p><strong>Panelists:</strong></p><p>Jason Charnes</p><p>Andrew Mason</p><p><br></p><p><br></p><p><strong>Guest:</strong></p><p>Vladimir Dementyev</p><p><br></p><p><br></p><p><br></p><p><strong>Sponsor:</strong></p><p><a href="https://www.honeybadger.io/">Honeybadger</a></p><p><br></p><p><br></p><p><strong>Links:</strong></p><p><a href="https://twitter.com/jmcharnes?ref_src=twsrc%255Egoogle%257Ctwcamp%255Eserp%257Ctwgr%255Eauthor">Jason Charnes Twitter</a></p><p><a href="https://twitter.com/excid3?lang=en">Chris Oliver Twitter</a></p><p><a href="https://twitter.com/andrewmcodes?lang=en">Andrew Mason Twitter</a></p><p><a href="https://twitter.com/palkan_tula?ref_src=twsrc%255Egoogle%257Ctwcamp%255Eserp%257Ctwgr%255Eauthor">Vladimir Dementyev Twitter</a></p><p><a href="https://github.com/palkan">Vladimir Dementyev GitHub</a></p><p><a href="https://discord.onl/stimulus_reflex/">StimulusReflex Discord</a></p><p><a href="https://evilmartians.com/">Evil Martians</a></p><p><a href="https://www.amazon.com/Layered-Design-Ruby-Rails-Applications/dp/1801813787/ref=tmm_pap_swatch_0?link_from_packtlink=yes"><em>Layered Design for Ruby on Rails Applications: Discover practical design patterns for maintainable web applications</em> by Vladimir Dementyev</a></p><p><a href="https://anycable.io/">AnyCable</a></p><p><a href="https://httpie.io/">HTTPie</a></p><p><a href="https://rubyonrails.org/world">Rails World 2023</a></p><p><a href="https://www.rubyforall.com/">Ruby for All Podcast</a></p>]]>
      </itunes:summary>
      <itunes:keywords>ruby, ruby on rails, coding, software development, programming</itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
      <podcast:person role="Host" href="https://jasoncharnes.com" img="https://images.transistor.fm/file/transistor/images/person/e8cb34f3-fd01-4f04-acaa-6c78f09940f1/1664565747-image.jpg">Jason Charnes</podcast:person>
      <podcast:person role="Host" href="https://t.co/iZncAnvuYq" img="https://images.transistor.fm/file/transistor/images/person/475ecc6b-5c2c-4167-8c03-ae9f889d139a/1664565855-image.jpg">Andrew Mason</podcast:person>
    </item>
    <item>
      <title>Rails 7.1 Is Gonna Be HUGE [UPDATED]</title>
      <itunes:episode>243</itunes:episode>
      <podcast:episode>243</podcast:episode>
      <itunes:title>Rails 7.1 Is Gonna Be HUGE</itunes:title>
      <itunes:episodeType>full</itunes:episodeType>
      <guid isPermaLink="false">e60270dd-b452-4c78-9272-16a768489b4b</guid>
      <link>https://share.transistor.fm/s/638faf55</link>
      <description>
        <![CDATA[<p>In today’s episode, Jason, Chris, and Andrew embark on some lively and humorous discussions about Bitcoin-inspired trucks, to practical insights on Rails 7.1 features, they explore security concepts, gas fees, Amsterdam travel plans, and much more. They dive into interesting developments like common table expressions, token generation in Rails 7.1, and the intriguing Bun package manager’s potential impact on Node. Chris also shares valuable insights into Stripe’s address element, Paddle as a Stripe alternative, and the complexities of handling taxes and chargebacks.  Hit download now for more “Bun” stuff!</p><p><br></p><p>[00:00:12] Our conversation starts with Chris seeing a truck with a BTC logo implying it may be hauling Bitcoins around, prices of gas and gas fees comes up, and the guy’s upcoming trip to Amsterdam, with Jason still having to work on is talk.</p><p><br></p><p>[00:03:29] Jason discusses a new feature in Stripe related to payment intents and Chris talks about embedded Stripe checkout and its benefits. </p><p><br></p><p>[00:08:16] Jason mentions the beta release of Rails 7.1 and its new features and Chris discusses his video on Rails 7.1 authentication features and its positive reception. </p><p><br></p><p>[00:11:13] Jason mentions using Rails 7.1 beta and noticing the presence of Docker-related files. Chris discusses Docker commands and the possibility of using “dock rails” as an alias, and he mentions the addition of a health check endpoint in Rails 7.1.</p><p><br></p><p>[00:12:24] Chris talks about a new route, rails routes—unused, for finding unused routes, Andrew discusses async queries and their potential impact on rendering, and Chris explains how async queries can be beneficial for parallel processing.  </p><p><br></p><p>[00:16:26] Chris mentions a new feature in Rails 7.1 that allows specifying required parameters using a magic comment. We also hear about the benefits of the Trilogy gem, a modern MySQL adapter for Rails, Andrew recalls past issues with installing the MySQL 2 gem, and Chris talks about the improved installation experience for the Trilogy gem.</p><p><br></p><p>[00:20:09] Jason asks if Rails 7.1 includes support for TypeScript and Chris mentions that Rails 7.1 has built-in support for common table expressions. Jason talks about the benefits of common table expressions in Rails 7.1 and how they eliminate the need for raw SQL. </p><p><br></p><p>[00:22:50] Chris discusses the new “generates_ token_ for” feature in Rails 7.1, allowing the generation of one-time use tokens without the need for database storage.</p><p><br></p><p>[00:24:21] Andrew brings up the “perform_all_later” method in Active Job, which allows multiple jobs to be pushed to the queue at once without running queue callbacks. </p><p>[00:25:01] Jason expresses excitement about JS bundling and how it seamlessly integrates into Rails, making it easier to adopt. </p><p><br></p><p>[00:26:03] We hear about issues related to Rake tasks and the namespace of methods in Rake files. Also, the flexibility of Rails’ asset pipeline and how you can add new tools to the pipeline without major changes.</p><p><br></p><p>[00:29:14] Andrew tells Jason why he should use Bun and mentions the improved speed and the historical use of Yarn for asset management in Rails.  Andrew expresses interest in trying out Bun to speed up CI processes, and Chris discusses Bun as a package manager and JavaScript/TypeScript runtime, which aims to replace Node and NPM.</p><p><br></p><p>[00:32:35] Chris mentions that Bun aims to be interchangeable with esbuild, making it easier for users to switch between the two. Jason raises the question of whether Bun could eliminate the need for Node on the server.</p><p><br></p><p>[00:37:29] The conversation shifts to a Stripe issue related to payment element improvements, and Chris mentions he’ll need to investigate the changes. </p><p><br></p><p>[00:39:50] Chris discusses the Stripe address element and its cost, mentioning that it can used independently or tied to a payment intent, which makes it free because it’s built on the Google Maps Places API. </p><p><br></p><p>[00:41:21] Chris praises Stripe’s Workbench beta, which includes a resizable interface with Stripe shell functionality for API exploration, making development more convenient.</p><p><br></p><p>[00:43:44] Chris mentions that Tailwind and Laravel are big users of Paddle, a billing platform that offers an alternative to Stripe, and he discusses the challenges Paddle faced in evolving its product.</p><p><br></p><p>[00:44:27] The conversation briefly touches on the complexities of handling taxes, especially when using a merchant of record service, and the thresholds for sales tax collection. </p><p><br></p><p><br></p><p><strong>Panelists:</strong></p><p>Jason Charnes</p><p>Chris Oliver</p><p>Andrew Mason</p><p><br></p><p><br></p><p><strong>Sponsor:</strong></p><p><a href="https://www.honeybadger.io/">Honeybadger</a></p><p><br></p><p><br></p><p><strong>Links:</strong></p><p><a href="https://twitter.com/jmcharnes?ref_src=twsrc%255Egoogle%257Ctwcamp%255Eserp%257Ctwgr%255Eauthor">Jason Charnes Twitter</a></p><p><a href="https://twitter.com/excid3?lang=en">Chris Oliver Twitter</a></p><p><a href="https://twitter.com/andrewmcodes?lang=en">Andrew Mason Twitter</a></p><p><a href="https://github.blog/2022-08-25-introducing-trilogy-a-new-database-adapter-for-ruby-on-rails/">Introducing Trilogy: a new database adapter for Ruby on Rails</a></p><p><a href="https://rubyonrails.org/2023/9/13/Rails-7-1-0-beta-1-has-been-released">Rails 7.1 Beta 1: Dockerfiles, BYO Authentication, More Async Queries, and more!</a> </p><p><a href="https://blog.appsignal.com/2023/02/15/whats-new-in-rails-7-1.html">What’s New in Rails 7.1</a></p><p><a href="https://www.paddle.com/">Paddle</a></p><p><a href="https://edgeapi.rubyonrails.org/classes/ActiveRecord/TokenFor/ClassMethods.html#method-i-generates_token_for">Active Record: generates_token_for</a></p><p><a href="https://github.com/rails/rails/pull/49241">Add Bun support # 49241</a></p><p><a href="https://bun.sh/">Bun</a></p>]]>
      </description>
      <content:encoded>
        <![CDATA[<p>In today’s episode, Jason, Chris, and Andrew embark on some lively and humorous discussions about Bitcoin-inspired trucks, to practical insights on Rails 7.1 features, they explore security concepts, gas fees, Amsterdam travel plans, and much more. They dive into interesting developments like common table expressions, token generation in Rails 7.1, and the intriguing Bun package manager’s potential impact on Node. Chris also shares valuable insights into Stripe’s address element, Paddle as a Stripe alternative, and the complexities of handling taxes and chargebacks.  Hit download now for more “Bun” stuff!</p><p><br></p><p>[00:00:12] Our conversation starts with Chris seeing a truck with a BTC logo implying it may be hauling Bitcoins around, prices of gas and gas fees comes up, and the guy’s upcoming trip to Amsterdam, with Jason still having to work on is talk.</p><p><br></p><p>[00:03:29] Jason discusses a new feature in Stripe related to payment intents and Chris talks about embedded Stripe checkout and its benefits. </p><p><br></p><p>[00:08:16] Jason mentions the beta release of Rails 7.1 and its new features and Chris discusses his video on Rails 7.1 authentication features and its positive reception. </p><p><br></p><p>[00:11:13] Jason mentions using Rails 7.1 beta and noticing the presence of Docker-related files. Chris discusses Docker commands and the possibility of using “dock rails” as an alias, and he mentions the addition of a health check endpoint in Rails 7.1.</p><p><br></p><p>[00:12:24] Chris talks about a new route, rails routes—unused, for finding unused routes, Andrew discusses async queries and their potential impact on rendering, and Chris explains how async queries can be beneficial for parallel processing.  </p><p><br></p><p>[00:16:26] Chris mentions a new feature in Rails 7.1 that allows specifying required parameters using a magic comment. We also hear about the benefits of the Trilogy gem, a modern MySQL adapter for Rails, Andrew recalls past issues with installing the MySQL 2 gem, and Chris talks about the improved installation experience for the Trilogy gem.</p><p><br></p><p>[00:20:09] Jason asks if Rails 7.1 includes support for TypeScript and Chris mentions that Rails 7.1 has built-in support for common table expressions. Jason talks about the benefits of common table expressions in Rails 7.1 and how they eliminate the need for raw SQL. </p><p><br></p><p>[00:22:50] Chris discusses the new “generates_ token_ for” feature in Rails 7.1, allowing the generation of one-time use tokens without the need for database storage.</p><p><br></p><p>[00:24:21] Andrew brings up the “perform_all_later” method in Active Job, which allows multiple jobs to be pushed to the queue at once without running queue callbacks. </p><p>[00:25:01] Jason expresses excitement about JS bundling and how it seamlessly integrates into Rails, making it easier to adopt. </p><p><br></p><p>[00:26:03] We hear about issues related to Rake tasks and the namespace of methods in Rake files. Also, the flexibility of Rails’ asset pipeline and how you can add new tools to the pipeline without major changes.</p><p><br></p><p>[00:29:14] Andrew tells Jason why he should use Bun and mentions the improved speed and the historical use of Yarn for asset management in Rails.  Andrew expresses interest in trying out Bun to speed up CI processes, and Chris discusses Bun as a package manager and JavaScript/TypeScript runtime, which aims to replace Node and NPM.</p><p><br></p><p>[00:32:35] Chris mentions that Bun aims to be interchangeable with esbuild, making it easier for users to switch between the two. Jason raises the question of whether Bun could eliminate the need for Node on the server.</p><p><br></p><p>[00:37:29] The conversation shifts to a Stripe issue related to payment element improvements, and Chris mentions he’ll need to investigate the changes. </p><p><br></p><p>[00:39:50] Chris discusses the Stripe address element and its cost, mentioning that it can used independently or tied to a payment intent, which makes it free because it’s built on the Google Maps Places API. </p><p><br></p><p>[00:41:21] Chris praises Stripe’s Workbench beta, which includes a resizable interface with Stripe shell functionality for API exploration, making development more convenient.</p><p><br></p><p>[00:43:44] Chris mentions that Tailwind and Laravel are big users of Paddle, a billing platform that offers an alternative to Stripe, and he discusses the challenges Paddle faced in evolving its product.</p><p><br></p><p>[00:44:27] The conversation briefly touches on the complexities of handling taxes, especially when using a merchant of record service, and the thresholds for sales tax collection. </p><p><br></p><p><br></p><p><strong>Panelists:</strong></p><p>Jason Charnes</p><p>Chris Oliver</p><p>Andrew Mason</p><p><br></p><p><br></p><p><strong>Sponsor:</strong></p><p><a href="https://www.honeybadger.io/">Honeybadger</a></p><p><br></p><p><br></p><p><strong>Links:</strong></p><p><a href="https://twitter.com/jmcharnes?ref_src=twsrc%255Egoogle%257Ctwcamp%255Eserp%257Ctwgr%255Eauthor">Jason Charnes Twitter</a></p><p><a href="https://twitter.com/excid3?lang=en">Chris Oliver Twitter</a></p><p><a href="https://twitter.com/andrewmcodes?lang=en">Andrew Mason Twitter</a></p><p><a href="https://github.blog/2022-08-25-introducing-trilogy-a-new-database-adapter-for-ruby-on-rails/">Introducing Trilogy: a new database adapter for Ruby on Rails</a></p><p><a href="https://rubyonrails.org/2023/9/13/Rails-7-1-0-beta-1-has-been-released">Rails 7.1 Beta 1: Dockerfiles, BYO Authentication, More Async Queries, and more!</a> </p><p><a href="https://blog.appsignal.com/2023/02/15/whats-new-in-rails-7-1.html">What’s New in Rails 7.1</a></p><p><a href="https://www.paddle.com/">Paddle</a></p><p><a href="https://edgeapi.rubyonrails.org/classes/ActiveRecord/TokenFor/ClassMethods.html#method-i-generates_token_for">Active Record: generates_token_for</a></p><p><a href="https://github.com/rails/rails/pull/49241">Add Bun support # 49241</a></p><p><a href="https://bun.sh/">Bun</a></p>]]>
      </content:encoded>
      <pubDate>Fri, 22 Sep 2023 19:17:10 -0500</pubDate>
      <author>Jason Charnes, Chris Oliver, Andrew Mason</author>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/media.transistor.fm/638faf55/430c9213.mp3" length="92084743" type="audio/mpeg"/>
      <itunes:author>Jason Charnes, Chris Oliver, Andrew Mason</itunes:author>
      <itunes:image href="https://images.transistor.fm/file/transistor/images/show/112/full_1559164364-artwork.jpg"/>
      <itunes:duration>2877</itunes:duration>
      <itunes:summary>
        <![CDATA[<p>In today’s episode, Jason, Chris, and Andrew embark on some lively and humorous discussions about Bitcoin-inspired trucks, to practical insights on Rails 7.1 features, they explore security concepts, gas fees, Amsterdam travel plans, and much more. They dive into interesting developments like common table expressions, token generation in Rails 7.1, and the intriguing Bun package manager’s potential impact on Node. Chris also shares valuable insights into Stripe’s address element, Paddle as a Stripe alternative, and the complexities of handling taxes and chargebacks.  Hit download now for more “Bun” stuff!</p><p><br></p><p>[00:00:12] Our conversation starts with Chris seeing a truck with a BTC logo implying it may be hauling Bitcoins around, prices of gas and gas fees comes up, and the guy’s upcoming trip to Amsterdam, with Jason still having to work on is talk.</p><p><br></p><p>[00:03:29] Jason discusses a new feature in Stripe related to payment intents and Chris talks about embedded Stripe checkout and its benefits. </p><p><br></p><p>[00:08:16] Jason mentions the beta release of Rails 7.1 and its new features and Chris discusses his video on Rails 7.1 authentication features and its positive reception. </p><p><br></p><p>[00:11:13] Jason mentions using Rails 7.1 beta and noticing the presence of Docker-related files. Chris discusses Docker commands and the possibility of using “dock rails” as an alias, and he mentions the addition of a health check endpoint in Rails 7.1.</p><p><br></p><p>[00:12:24] Chris talks about a new route, rails routes—unused, for finding unused routes, Andrew discusses async queries and their potential impact on rendering, and Chris explains how async queries can be beneficial for parallel processing.  </p><p><br></p><p>[00:16:26] Chris mentions a new feature in Rails 7.1 that allows specifying required parameters using a magic comment. We also hear about the benefits of the Trilogy gem, a modern MySQL adapter for Rails, Andrew recalls past issues with installing the MySQL 2 gem, and Chris talks about the improved installation experience for the Trilogy gem.</p><p><br></p><p>[00:20:09] Jason asks if Rails 7.1 includes support for TypeScript and Chris mentions that Rails 7.1 has built-in support for common table expressions. Jason talks about the benefits of common table expressions in Rails 7.1 and how they eliminate the need for raw SQL. </p><p><br></p><p>[00:22:50] Chris discusses the new “generates_ token_ for” feature in Rails 7.1, allowing the generation of one-time use tokens without the need for database storage.</p><p><br></p><p>[00:24:21] Andrew brings up the “perform_all_later” method in Active Job, which allows multiple jobs to be pushed to the queue at once without running queue callbacks. </p><p>[00:25:01] Jason expresses excitement about JS bundling and how it seamlessly integrates into Rails, making it easier to adopt. </p><p><br></p><p>[00:26:03] We hear about issues related to Rake tasks and the namespace of methods in Rake files. Also, the flexibility of Rails’ asset pipeline and how you can add new tools to the pipeline without major changes.</p><p><br></p><p>[00:29:14] Andrew tells Jason why he should use Bun and mentions the improved speed and the historical use of Yarn for asset management in Rails.  Andrew expresses interest in trying out Bun to speed up CI processes, and Chris discusses Bun as a package manager and JavaScript/TypeScript runtime, which aims to replace Node and NPM.</p><p><br></p><p>[00:32:35] Chris mentions that Bun aims to be interchangeable with esbuild, making it easier for users to switch between the two. Jason raises the question of whether Bun could eliminate the need for Node on the server.</p><p><br></p><p>[00:37:29] The conversation shifts to a Stripe issue related to payment element improvements, and Chris mentions he’ll need to investigate the changes. </p><p><br></p><p>[00:39:50] Chris discusses the Stripe address element and its cost, mentioning that it can used independently or tied to a payment intent, which makes it free because it’s built on the Google Maps Places API. </p><p><br></p><p>[00:41:21] Chris praises Stripe’s Workbench beta, which includes a resizable interface with Stripe shell functionality for API exploration, making development more convenient.</p><p><br></p><p>[00:43:44] Chris mentions that Tailwind and Laravel are big users of Paddle, a billing platform that offers an alternative to Stripe, and he discusses the challenges Paddle faced in evolving its product.</p><p><br></p><p>[00:44:27] The conversation briefly touches on the complexities of handling taxes, especially when using a merchant of record service, and the thresholds for sales tax collection. </p><p><br></p><p><br></p><p><strong>Panelists:</strong></p><p>Jason Charnes</p><p>Chris Oliver</p><p>Andrew Mason</p><p><br></p><p><br></p><p><strong>Sponsor:</strong></p><p><a href="https://www.honeybadger.io/">Honeybadger</a></p><p><br></p><p><br></p><p><strong>Links:</strong></p><p><a href="https://twitter.com/jmcharnes?ref_src=twsrc%255Egoogle%257Ctwcamp%255Eserp%257Ctwgr%255Eauthor">Jason Charnes Twitter</a></p><p><a href="https://twitter.com/excid3?lang=en">Chris Oliver Twitter</a></p><p><a href="https://twitter.com/andrewmcodes?lang=en">Andrew Mason Twitter</a></p><p><a href="https://github.blog/2022-08-25-introducing-trilogy-a-new-database-adapter-for-ruby-on-rails/">Introducing Trilogy: a new database adapter for Ruby on Rails</a></p><p><a href="https://rubyonrails.org/2023/9/13/Rails-7-1-0-beta-1-has-been-released">Rails 7.1 Beta 1: Dockerfiles, BYO Authentication, More Async Queries, and more!</a> </p><p><a href="https://blog.appsignal.com/2023/02/15/whats-new-in-rails-7-1.html">What’s New in Rails 7.1</a></p><p><a href="https://www.paddle.com/">Paddle</a></p><p><a href="https://edgeapi.rubyonrails.org/classes/ActiveRecord/TokenFor/ClassMethods.html#method-i-generates_token_for">Active Record: generates_token_for</a></p><p><a href="https://github.com/rails/rails/pull/49241">Add Bun support # 49241</a></p><p><a href="https://bun.sh/">Bun</a></p>]]>
      </itunes:summary>
      <itunes:keywords>ruby, ruby on rails, coding, software development, programming</itunes:keywords>
      <itunes:explicit>No</itunes:explicit>
      <podcast:person role="Host" href="https://jasoncharnes.com" img="https://images.transistor.fm/file/transistor/images/person/e8cb34f3-fd01-4f04-acaa-6c78f09940f1/1664565747-image.jpg">Jason Charnes</podcast:person>
      <podcast:person role="Host" href="https://excid3.com" img="https://images.transistor.fm/file/transistor/images/person/59d3d124-d688-4a74-a4b6-520c85b714f3/1664565787-image.jpg">Chris Oliver</podcast:person>
      <podcast:person role="Host" href="https://t.co/iZncAnvuYq" img="https://images.transistor.fm/file/transistor/images/person/475ecc6b-5c2c-4167-8c03-ae9f889d139a/1664565855-image.jpg">Andrew Mason</podcast:person>
    </item>
  </channel>
</rss>
